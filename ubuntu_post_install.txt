# Ubuntu post-install

# Update system
sudo apt update && sudo apt upgrade -y && sudo apt autoclean && sudo apt autoremove -y

# Install basic packages
sudo apt install git gh zsh curl xclip -y

# Install oh-my-zsh
sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"

# Install Spaceship Promtp
git clone https://github.com/spaceship-prompt/spaceship-prompt.git "$ZSH_CUSTOM/themes/spaceship-prompt" --depth=1
ln -s "$ZSH_CUSTOM/themes/spaceship-prompt/spaceship.zsh-theme" "$ZSH_CUSTOM/themes/spaceship.zsh-theme"
sed -i 's/^ZSH_THEME=".*"$/ZSH_THEME="spaceship"/' ~/.zshrc
source ~/.zshrc

# Install zsh plugins
git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions
git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting
sed -i 's/^plugins=\(.*\)$/plugins=(git z zsh-syntax-highlighting zsh-autosuggestions)/' ~/.zshrc
source ~/.zshrc


# Install Python dependencies
sudo apt install build-essential libssl-dev zlib1g-dev \
libbz2-dev libreadline-dev libsqlite3-dev curl \
libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev

# Install UV (Python Manager)
curl -LsSf https://astral.sh/uv/install.sh | sh
source ~/.zshrc
uv python pin 3.13

# Install NVM
echo '# >>>> NVM init >>>>' >> ~/.zshrc
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.5/install.sh | bash
echo '# <<<< NVM end<<<<' >> ~/.zshrc
source ~/.zshrc
nvm install --lts

# Uninstall docker old packages
for pkg in docker.io docker-doc docker-compose docker-compose-v2 podman-docker containerd runc; do sudo apt-get remove $pkg; done

# Install latest docker
# Add Docker's official GPG key:
sudo apt-get update
sudo apt-get install ca-certificates curl
sudo install -m 0755 -d /etc/apt/keyrings
sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
sudo chmod a+r /etc/apt/keyrings/docker.asc

# Add the repository to Apt sources:
echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
  $(. /etc/os-release && echo "${UBUNTU_CODENAME:-$VERSION_CODENAME}") stable" | \
  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt-get update


curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
echo \
  "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
  $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt update
sudo apt install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
sudo usermod -aG docker $USER

# Instalação do batcat
# Verifique a versão mais recente em Releases · sharkdp/bat (github.com)
BCVERSION=0.24.0
cd /tmp
curl -L -o bat.deb https://github.com/sharkdp/bat/releases/download/v$BCVERSION/bat-musl_"$BCVERSION"_amd64.deb 
chmod +x bat.deb
sudo dpkg -i bat.deb
echo '#' >> ~/.zshrc
echo '# batcat alias over cat' >> ~/.zshrc
echo 'alias cat="bat --color=auto"' >> ~/.zshrc
source ~/.zshrc
rm -f bat.deb
source ~/.zshrc
cd -


# New SSH-Key
ssh-keygen -t ed25519 -C "your_email@example.com"
cat ~/.ssh/id_ed25519.pub | xclip -sel c
# cole o conteúdo da área de transferência em uma nova chave do github

# apague o histórico
history -c
